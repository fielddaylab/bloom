# basePath   region1

:: welcome
@trigger GameBooted
@conditions     intro:tutorialComplete = false
@cutscene
@once
// $call Pause()
$call PauseAlertType("ExcessRunoff")

$call CutsceneBegin()
    $call CutscenePrepareImages("intro/frame1-1.png", "intro/frame1-2.png", "intro/frame1-3.png")
    $call CutsceneAllImages(0.5)
    You are assigned the Director of the region's Sustainable Agricultural Growth Administration: SAGA.
    $call CutscenePrepareImages("intro/frame2-1.png", "intro/frame2-2.png", "intro/frame2-3.png")
	$call CutsceneAllImages(0.5)
	This region is young. It's your job as SAGA director to help them grow...
	$call CutscenePrepareImages("intro/frame3-1.png", "intro/frame3-2.png", "intro/frame3-3.png")
	$call CutsceneAllImages(0.5)
	If you fail, they will succumb to ruin. Cities will empty; people will starve; the land and the waterways will be become desolate.
	$call CutscenePrepareImages("intro/frame4-1.png", "intro/frame4-2.png", "intro/frame4-3.png")
	$call CutsceneAllImages(0.5)
	Your first assignment is <i>Knoll County</i>. You will meet two guides...
$call CutsceneEnd()

{@advisorEconHill}      Greetings! Welcome to Knoll County.
$call ForceDialogueInteraction()
{@advisorEconHill}      I'm here to advise you on money matters. 
{@advisorEconHill}      Knoll County is growing...
{@advisorEconHill}      ...but these farms and businesses aren't connected.
$call PanToBuilding("region1_city1")
{@advisorEconHill}      There's the <i>City</i> of Pendleton Hills...
$call PanToBuilding("region1_grain1")
{@advisorEconHill}      Henrietta's <i>Grain Farm</i>...
$call PanToBuilding("region1_cafo1")
{@advisorEconHill}      And Bertram's <i>Dairy Farm</i>.
{@advisorEcolHill}      Well, it's a bit more than just a "dairy farm," its a huge operation.
{@advisorEcolHill}      I'll be informing you on environmental concerns, by the way.
{@advisorEconHill}      Yes, thank you. But back to <i>important</i> things. Like establishing trade routes!
$call ReleaseDialogueInteraction()
$call FocusHighlightOn("BuildModeButton")
{@advisorEconHill}      Open <b>Build Mode</b>.
$call FocusClear()
$call Unpause()


// Step 2: Road drawing tutorial
:: roadSelected
@trigger BuildButtonPressed
@conditions     intro:tutorialComplete = false
@cutscene
@once
{@advisorEconHill}      Each road segment costs $5. 
{@advisorEconHill}      You will see a running total of your costs as you build.
{@advisorEcolHill}      You can't build over any of our protected forests or deep water.
{@advisorEconHill}      Select your <i>Road</i> tool and build a road between the <i>Grain Farm</i> to the <i>Dairy Farm</i>.
$call PanToBuildingOffset("region1_grain1", -1)
$call ShowAnimatedTutorial("ClickDragTutorial")


// Step 3: Introduce cities
:: farmsConnected
@trigger    FarmConnection
@conditions     intro:tutorialComplete = false
@cutscene
@once
// $call Pause()
$set intro:farmsConnected = true
$if intro:citiesConnected
    $call HideAnimatedTutorial()
    $call ForceDialogueInteraction()
    {@advisorEconHill}      Now the Dairy Farm can buy <i>grain</i> from the Grain Farm.
    {@advisorEconHill}      And the Grain Farm can buy <i>manure</i> for fertilizer.
    {@advisorEconHill}      Its the beginning of our local <i>Fertilizer Economy</i>.
    {local @grainFarmer}    Pippin, will this help us save some money? 
    {local @cafoFarmer}     Yeah, I'm going broke here. It would be great to turn manure into money. 

    $branch .farmsAndCitiesConnected
$else
    // Step 4: Connect city and dairy
    // {@advisorEconHill}   Now the Grain Farm can buy <i>manure</i> from the Dairy Farm.
    {@advisorEconHill}      Now Bertram can buy Henreitta's <i>grain</i> for his cows...
    {@advisorEconHill}      and the fine people of Pendleton Hills buy the <i>milk</i>.
    $if !intro:citiesConnected 
        $call PanToBuilding("region1_city1")
        {@advisorEconHill}      We need a <i>Road</i> to connect the Dairy Farm to the City.
    $endif
$endif
// $call Unpause()

:: cityConnected
@trigger    CityConnection
@conditions     intro:tutorialComplete = false
@cutscene
@once
// $call Pause()
$set intro:citiesConnected = true
$if intro:farmsConnected
    $call HideAnimatedTutorial()
    $call ForceDialogueInteraction()
    {@advisorEconHill}      Excellent! The the City has a source of <i>milk</i>!
    $branch .farmsAndCitiesConnected
$else
    // Step 4: Connect dairy and grain
    {@advisorEconHill}      With this road, the City can purchase Bertram's <i>milk</i>.
    {@advisorEconHill}      But cows need <i>grain</i> to make milk...
    $call PanToBuilding("region1_grain1")
    {@advisorEconHill}      Build another road between the Dairy Farm and the Grain Farm.
$endif

// $call Unpause()

:: farmsAndCitiesConnected 
@conditions     intro:tutorialComplete = false
@once
@cutscene
$set intro:farmsAndCities = true
$call HideAnimatedTutorial()
{@advisorEconHill}      Everything in the county is connected.
{@advisorEconHill}      The city income taxes give SAGA a budget. 
{@advisorEconHill}      But SAGA may need more funding.
{@advisorEconHill}      I've unlocked the Sales Tax policy.
$call UnlockCards(SalesTaxPolicy)
{@advisorEconHill}      See me again from your <b>Economic Advisor</b> button.
$call ForceCloseDialogue()
$call Wait(0.4)
$call FocusHighlightOn("EconomyAdvisor")
$call ReleaseDialogueInteraction()

:: wrongAdvisor
@trigger AdvisorOpened
@conditions     advisorType == "Ecology", intro:farmsAndCities, intro:tutorialComplete = false
@cutscene
$call FocusClear()
{@advisorEcolHill}      Hey there!
{@advisorEcolHill}      I think Pippin wanted to talk to you.
{@advisorEcolHill}      His <b>Economic Advisor</b> button has a gem on it. Pretty ostentatious if you ask me...
$call FocusHighlightOn("EconomyAdvisor")

:: letsGetStarted
@trigger AdvisorOpened
@conditions     advisorType == "Economy", intro:farmsAndCities, intro:tutorialComplete == false
@forcePolicy    Economy
@cutscene
@once
$call FocusClear()
$set intro:pendingPolicy = true
{@advisorEconHill}     You can adjust Knoll County's policies here.
{@advisorEconHill}     Sales Policy can provide additional revenue.
{viewpoliciesnext}
{@advisorEconHill}     But set it too high, and trade may be hindered.

:: closedWithoutSettingPolicy
@trigger    AdvisorClosed
@conditions intro:pendingPolicy == true, intro:tutorialComplete == false
@forcePolicy    Economy
@cutscene
{@advisorEconHill}      Hold on there!
{@advisorEconHill}      Make sure to set a Sales Policy before you leave.
{viewpoliciesnext}
{@advisorEconHill}      You can set it to None if you like, but we ought to decide.

// :: setPolicyReminder
// @trigger AdvisorOpened
// @conditions advisorType == "Economy", intro:farmsAndCities, intro:tutorialComplete == false, Visited("region1.letsGetStarted")
// @forcePolicy    Economy
// $call FocusClear()
// {viewpoliciesnext}
// {@advisorEconHill}      Choose a Sales Policy and we can continue.

// :: sittingOmens
// @trigger        LetSat
// @conditions     intro:citiesConnected, intro:farmsConnected
// @once
// $call Pause()
// $call PanToBuilding("region1_cafo1")
// {@advisorEcolHill}      This dairy farm is letting manure sit.
// {@advisorEcolHill}  It is sinking into the groundwater and will run off into the lakes. 
// {@advisorEconHill}      Indeed. They simply have no more favorable alternatives.
// {@advisorEcolHill}      This could be bad for the future of the lakes...
// $call Unpause()

:: specialDelivery
@trigger    ExternalImport
// @conditions !intro:exporterFound
@cutscene
@once
// $call Pause()
// $set intro:exporterFound = true
$call PanToBuilding("region1_grain1")
{@advisorEconHill}      Ho! Special delivery!
{@advisorEconHill}      Henrietta's Grain Farm imported some <i>fertilizer</i>.
{local @grainFarmer}    I love <b>Phos4Us</b>! My crops need phosphorus to grow...
{local @grainFarmer}    ...and its cheap to ship to my farm.
{@advisorEcolHill}      Hold on! We are adding MORE nutrients to our county?
{@advisorEcolHill}      This could disrupt the ecological balance!
$call AddAutoAlertCondition("Bloom", 1)
{@advisorEconHill}      I'm afraid this is the only economically feasible option.
// $call Unpause()



:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(1), intro:tutorialComplete
// @forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
    $call ForcePolicyInstant("Ecology")
    {local @advisorEcol}    Hey there, boss! Here to check out some policies?
$else
    {local @advisorEcol}    Hey there! No policies to assign yet.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(1), intro:tutorialComplete
// @forcePolicyEarly    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
    $call ForcePolicyInstant("Economy")
    {local @advisorEcon}    Here are the economic policies.
$else
    {local @advisorEcon}    Greetings. Once we have economic policies to set, you can come see me.
$endif

:: openedToForest
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(1), RegionUnlocked(2)
@priority       High
// @forcePolicy    Economy
@once
$call ForcePolicyInstant("Economy")
{@advisorEconHill}      Ah, you've expanded into Cypress County. Lucky you.
{@advisorEconHill}      Now you can be <i>condescended to</i> while surrounded by natural splendor.
{@advisorEconHill}      Hope you like the smell of old mushrooms.

:: openedToPrairie
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(1), RegionUnlocked(3)
@priority       High
@forcePolicy    Ecology
@once
{@advisorEcolHill}      Ugh... Those Heath County hayseeds always irked me.
{@advisorEcolHill}      They think they're better than everyone because of their fancy college.
{@advisorEcolHill}      Plus their straw hats are weird!
{viewpoliciesnext}
{@advisorEcolHill}      Anyway, what can I help you with?


// :: preBloomRunoff
// @trigger        AlertExamined
// @conditions     alertType == "excess-runoff", CameraInRegion(1)
// @once
// {local @advisorEcol}    Hold on... This farm is just letting manure sit around!
// {local @advisorEcon}    An astute observation. What would you have them do with it?
// {local @advisorEcol}    Well, it's got phosphorus. Why not make use of it?
// {local @advisorEcon}    Who would pay to ship around truckloads of poop when there's Phos 4 Us?
// {local @advisorEcol}    Hmm...


:: runoffTrigger
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 1, isFromGrainFarm == false
@forcePolicy    Ecology
@queued
@cutscene
@once
// $call Pause()
$set global:runoffDiscovered = true
{@advisorEcolHill}      This farm is just letting manure leach into the water table!
{@advisorEcolHill}      That must be behind those algae blooms.
{@advisorEconHill}      Maybe so, but they simply have no more favorable alternatives.
{@advisorEcolHill}      Well, let's make it less favorable. How about a <b>fine</b> for runoff?
$call UnlockCards(RunoffPolicy)
{local @cafoFarmer}     A fine!? I'm barely scraping by as is. You'd have me selling at a loss!
{@advisorEconHill}      Hrm... A fine <i>could</i> incentivize selling manure...
{@advisorEconHill}      But Bertram is correct. Selling at a loss could disrupt the supply chain.
{viewpoliciesnext}
{@advisorEcolHill}      What do you think, boss?

:: genericRunoff
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 1, global:runoffDiscovered, isFromGrainFarm == false
@queued
// $call Pause()
{local @advisorEcol}    More runoff... 
$if PolicyLevelInRegion(1, "RunoffPolicy") < 3
    {@advisorEcolHill}      Maybe we ought to increase our runoff fine?
    {@advisorEconHill}      Careful now! We don't want to bankrupt our farmers.
    {@advisorEconHill}      We just need to give them a more favorable option.
$else
    {@advisorEcolHill}      Our runoff fine is high as can be...
    {@advisorEconHill}      Perhaps this farm needs a manure buyer.
$endif
$if Visited("region2.unlockStorage")
    {local @advisorEcon}    Or we could build a <b>Storage</b> unit.
$endif

:: discoverFirstBloom
@trigger        AlertExamined
@cutscene
@conditions     alertType == "bloom", alertRegion == 1 
@once
// $call Pause()
$set global:bloomDiscovered = true
// TODO: trigger ACT 2 HERE.
{@advisorEcolHill}    What's this...?
$call CutsceneBegin()
    $call CutscenePrepareImages("act2/2-1-1.png", "act2/2-1-2.png", "act2/2-1-3.png")
    $call CutsceneAllImages(0.5)
    Something is wrong with the lakes. They are filled with revolting green algae! This can't be safe for our ecosystem.
    $call CutscenePrepareImages("act2/2-2-1.png", "act2/2-2-2.png", "act2/2-2-3.png")
	$call CutsceneAllImages(0.5)
	Could the grain farmers be to blame? Algae loves phosphorus, and they import phosphorus and overapply it!
    $call CutscenePrepareImages("act2/2-3-1.png", "act2/2-3-2.png", "act2/2-3-3.png")
	$call CutsceneAllImages(0.5)
	Or the dairy farmers? Their cows' phosphorus-filled manure runs off into the lakes too! But it's expensive to ship away...
    $call CutscenePrepareImages("act2/2-4-1.png", "act2/2-4-2.png", "act2/2-4-3.png")
	$call CutsceneAllImages(0.5)
    Nearby farms might be able to afford manure fertilizer... But long-distance shipping is just too costly!
    $call CutscenePrepareImages("act2/2-5-1.png", "act2/2-5-2.png", "act2/2-5-3.png")
	$call CutsceneAllImages(0.5)
	Whoever is to blame, our cities need milk and clean water. You - and SAGA - will need to take action.
$call CutsceneEnd()
{@advisorEcolHill}    Something must be done! I'll keep an eye out for any phosphorus runoff.
$call OffsetAlgaeGrowthThreshold(1)
$call UnpauseAlertType("ExcessRunoff")
$call AddAutoAlertCondition("ExcessRunoff", 1)
// $call Unpause()

:: genericBloomTrigger
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 1, global:runoffDiscovered
@forcePolicy    Ecology
{@advisorEcolHill}      Yikes... Another algae bloom. What should we do about it?
$set local:runoffLevel = PolicyLevelInRegion(1, "RunoffPolicy")
$if local:runoffLevel < 1
    {@advisorEcolHill}      We could address the causes by penalizing farms for letting manure sit in the fields.
$elseif local:runoffLevel < 3
    {@advisorEcolHill}      Maybe our runoff fine isn't high enough.
$endif
$if PolicyLevelInRegion(1, "SkimmingPolicy") < 1
    {@advisorEcolHill}      Or we could use skimmers to clean up.
$endif
{viewpoliciesnext}
{@advisorEcolHill}     Your choice, boss.

// TODO: add event/trigger for city stress (nearby bloom and/or lacking milk)

:: SellAtLossCafo
@trigger        AlertExamined
@conditions     alertType == "selling-loss", alertRegion == 1, isFromGrainFarm == false
@forcePolicy    Economy
// $call Pause()
{local @cafoFarmer}     My farm is losing money... At this rate, I'll have to slow down milk production!
{@advisorEconHill}      Hmm... Bertram here is in a rough spot.
{@advisorEconHill}      If we want to keep business running smoothly, we'd best find a way to lower costs.
{viewpoliciesnext}
$set local:runoffLevel = PolicyLevelInRegion(1, "RunoffPolicy")
$if local:runoffLevel > 0
    {@advisorEconHill}      I would suggest ditching that runoff fine.
    {@advisorEcolHill}      And let Bertram pollute? I don't approve...
$endif
$set local:taxLevel = PolicyLevelInRegion(1, "SalesTaxPolicy")
$if local:taxLevel > 0
    $if local:taxLevel < 3
    {@advisorEconHill}      That sales tax may be squeezing him. Can we do without the revenue?
    $endif
$endif
// $call Unpause()