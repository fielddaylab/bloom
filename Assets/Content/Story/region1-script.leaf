# basePath   region1

:: welcome
@trigger GameBooted
@conditions     intro:tutorialComplete = false
@cutscene
@once
$call Pause()
$call PauseAlertType("ExcessRunoff")

$call CutsceneBegin()
    $call CutscenePrepareImages("intro/frame1-1.png", "intro/frame1-2.png", "intro/frame1-3.png")
    $call CutsceneAllImages(0.5)
    You are assigned the Director of the region's Sustainable Agricultural Growth Administration: SAGA.
    $call CutscenePrepareImages("intro/frame2-1.png", "intro/frame2-2.png", "intro/frame2-3.png")
	$call CutsceneAllImages(0.5)
	This region is young. It's your job as SAGA director to help them grow...
	$call CutscenePrepareImages("intro/frame3-1.png", "intro/frame3-2.png", "intro/frame3-3.png")
	$call CutsceneAllImages(0.5)
	If you fail, they will succumb to ruin. Cities will empty; people will starve; the land and the waterways will be become desolate.
	$call CutscenePrepareImages("intro/frame4-1.png", "intro/frame4-2.png", "intro/frame4-3.png")
	$call CutsceneAllImages(0.5)
	Your first assignment is <i>Knoll County</i>. You will meet two guides...
$call CutsceneEnd()

{@advisorEconHill}      Greetings! Welcome to Knoll County.
$call ForceDialogueInteraction()
{@advisorEconHill}      I'm here to advise you on money matters. 
{@advisorEconHill}      Knoll County is growing...
{@advisorEconHill}      ...but these farms and businesses aren't connected.
{@advisorEconHill}      We could use your help here. 
$call PanToBuilding("region1_city1")
{@advisorEconHill}      There's the <i>City</i> of Pendleton Hills...
$call PanToBuilding("region1_grain1")
{@advisorEconHill}      Henrietta's <i>Grain Farm</i>...
$call PanToBuilding("region1_cafo1")
{@advisorEconHill}      And Bertram's <i>Dairy Farm</i>.
{@advisorEcolHill}      Well, it's a bit more than just a "dairy farm."
{@advisorEcolHill}      It's a major operation. 
{@advisorEcolHill}      Its technical name is a <i>concentrated animal feed operation</i>... a CAFO.
{@advisorEcolHill}      I'll be informing you on environmental concerns, by the way.
{@advisorEconHill}      Yes, thank you. But back to <i>important</i> things. Like establishing trade routes!
$call ReleaseDialogueInteraction()
{@advisorEconHill}      Open <b>Build Mode</b>.
$call Unpause()


// Step 2: Road drawing tutorial
:: roadSelected
@trigger BuildButtonPressed
@conditions     intro:tutorialComplete = false
@cutscene
@once
{@advisorEconHill}      With your <i>Road</i> tool selected, click and drag from the source to the destination. 
{@advisorEcolHill}      But don't try to build over any of our forests.
{@advisorEcolHill}      Those are protected lands!
{@advisorEcolHill}      And you can't bridge over darker <b>deep water.</b>
{@advisorEconHill}      Plus each tile will spend from our county budget! Try to be thrifty.
{@advisorEconHill}      Click "Build" when you have the road the way you like it.


// Step 3: Introduce cities
:: farmsConnected
@trigger    FarmConnection
@conditions     intro:tutorialComplete = false
@cutscene
@once
$call Pause()
$set intro:farmsConnected = true
$if intro:citiesConnected
    $call ForceDialogueInteraction()
    {@advisorEconHill}      Nice work! Now the CAFO can buy <i>grain</i> from the Grain Farm to produce <i>milk</i>.
    // {@advisorEconHill}      And the Grain Farm can buy <i>manure</i> from the Dairy Farm to produce <i>grain</i>.
    $branch .farmsAndCitiesConnected
$else
    // Step 4: Connect city and dairy
    {@advisorEconHill}      Splendidly planned.
    {@advisorEconHill}      Notice the <b>receipt</b> that keeps a running total of your plan's cost.
    // {@advisorEconHill}      Now the Grain Farm can buy <i>manure</i> from the Dairy Farm to produce <i>grain</i>.
    {@advisorEconHill}      Now Bertram can buy Henreitta's <i>grain</i> to produce <i>milk</i>.
    {@advisorEconHill}      But who buys the <i>milk</i>, you ask? The fine people of Pendleton Hills, of course!
    $if !intro:citiesConnected 
        $call PanToBuilding("region1_city1")
        {@advisorEconHill}      Draw up another <i>Road</i> connecting the CAFO to the City.
    $endif
$endif
$call Unpause()

:: cityConnected
@trigger    CityConnection
@conditions     intro:tutorialComplete = false
@cutscene
@once
$call Pause()
$set intro:citiesConnected = true
$if intro:farmsConnected
    $call ForceDialogueInteraction()
    {@advisorEconHill}      Excellent! Now the the City has a source of <i>milk</i>!
    $branch .farmsAndCitiesConnected
$else
    // Step 4: Connect dairy and grain
    {@advisorEconHill}      Uh-- hmm. I suppose we can start with the City. I'm not picky..
    {@advisorEconHill}      With this road, the City can purchase Bertram's <i>milk</i>.
    {@advisorEconHill}      But cows need <i>grain</i> to make milk... And Henrietta just happens to sell it!
    $call PanToBuilding("region1_grain1")
    {@advisorEconHill}      Plan another road between the CAFO and the Grain Farm.
$endif

$call Unpause()

:: farmsAndCitiesConnected 
@forcePolicy    Economy
@conditions     intro:tutorialComplete = false
@once
@cutscene
$set intro:farmsAndCities = true
{@advisorEconHill}      Now that everything is connected, we can turn <i>grain</i> into <i>milk</i> for Pendleton Hills.
{@advisorEconHill}      That milk fuels taxable production, and gives us a budget!
{@advisorEconHill}      But SAGA may need more funding to continue work in the area.
{@advisorEconHill}      I've unlocked the Sales Tax policy.
$call UnlockCards(SalesTaxPolicy)
{@advisorEconHill}      See me again from your <b>Economic Advisor</b> button. 
// TODO: add popup/highlight to Economic Advisor button here
$call ReleaseDialogueInteraction()

:: wrongAdvisor
@trigger AdvisorOpened
@conditions     advisorType == "Ecology", intro:farmsAndCities, intro:tutorialComplete = false
@cutscene
{@advisorEcolHill}      Hey there!
{@advisorEcolHill}      I think Pippin wanted to talk to you.
{@advisorEcolHill}      His <b>Economic Advisor</b> button has a gem on it. Pretty ostentatious if you ask me...

:: letsGetStarted
@trigger AdvisorOpened
@conditions     advisorType == "Economy", intro:farmsAndCities, intro:tutorialComplete = false
@forcePolicy    Economy
@cutscene
@once
{@advisorEconHill}      Hello again.
{@advisorEconHill}      You can see me here any time to adjust Knoll County's policies - like Sales Tax!
{@advisorEconHill}      It can provide additional revenue for infrastructure projects.
{@advisorEconHill}      But set it too high, and trade may be hindered.
{@advisorEconHill}      What do you think?


:: policySet
@trigger        PolicySet
$branch .policyDescriptions
$if intro:tutorialComplete = false
    $branch .choseFirstPolicy
$endif

:: choseFirstPolicy
$set intro:tutorialComplete = true
{@advisorEconHill}  A fine choice. 
{@advisorEconHill}  Remember, you can always use the <b>spacebar</b> to pause and think.
{@advisorEconHill}  But let's get this economy started, shall we?
$call ActivateSim()

// :: sittingOmens
// @trigger        LetSat
// @conditions     intro:citiesConnected, intro:farmsConnected
// @once
// $call Pause()
// $call PanToBuilding("region1_cafo1")
// {@advisorEcolHill}      It looks like this dairy farm is letting its manure sit and run off.
// {@advisorEconHill}      Indeed. They simply have no more favorable alternatives.
// {@advisorEcolHill}      This could have ramifications for lake health down the line...
// $call Unpause()

:: specialDelivery
@trigger    ExternalImport
@conditions !intro:exporterFound
@cutscene
@once
$call Pause()
$set intro:exporterFound = true
$call PanToBuilding("region1_grain1")
{@advisorEconHill}      Ho! Special delivery!
{@advisorEconHill}      Henrietta's grain farm imported some <i>commercial fertilizer</i> from an outside supplier.
{local @grainFarmer}    I love <b>Phos4Us</b>! My crops need that phosphorus, and it ships right to my farm.
{@advisorEcolHill}      Hold on! All those extra nutrients could disrupt the ecological balance!
{@advisorEconHill}      Well, I'm afraid this is the only economically feasible option.
{@advisorEcolHill}      Hm... I'm sure we can find a better way...
$call AddAutoAlertCondition("Bloom", 1)
$call Unpause()


:: skipTutorial
@trigger    TutorialSkipped
$call CutsceneEnd()
{@advisorEconUrban}    Heheh, you've skipped the tutorial! Far out.
$set intro:tutorialComplete = true
$set intro:exporterFound = true
$call UnlockCards(SalesTaxPolicy)
$call AddAutoAlertCondition("Bloom", 1)
$call ReleaseDialogueInteraction()
$call Unpause()
$call ActivateSim()

:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(1), intro:tutorialComplete
@forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
    {local @advisorEcol}    Hey there, boss! Here to check out some policies?
$else
    {local @advisorEcol}    Hey there! No policies to assign yet.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(1), intro:tutorialComplete
@forcePolicy    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
    {local @advisorEcon}    Here are the economic policies.
$else
    {local @advisorEcon}    Greetings. Once we have economic policies to set, you can come see me.
$endif



:: policyDescriptions
$if local:policyType == "RunoffPolicy"
    $if     local:policyIndex == 0
        {local @advisorEcol}    Temporary text: Runoff penalty NONE
    $elseif local:policyIndex == 1
        {local @advisorEcol}    Temporary text: Runoff penalty LOW
    $elseif local:policyIndex == 2
        {local @advisorEcol}    Temporary text: Runoff penalty HIGH
    $elseif local:policyIndex == 3
        {local @advisorEcol}    Temporary text: Runoff penalty VERY HIGH
    $endif
$elseif local:policyType == "SkimmingPolicy"
    $if     local:policyIndex == 0
        {local @advisorEcol}    Temporary text: Skimming policy NONE
    $elseif local:policyIndex == 1
        {local @advisorEcol}    Temporary text: Skimming policy LOW
    $elseif local:policyIndex == 2
        {local @advisorEcol}    Temporary text: Skimming policy HIGH
    $elseif local:policyIndex == 3
        {local @advisorEcol}    Temporary text: Skimming policy DREDGE
    $endif
$elseif local:policyType == "SalesTaxPolicy"
    $if     local:policyIndex == 0
        {local @advisorEcon}    Even without sales tax, you'll gain $5 for each milk shipment the city consumes.
    $elseif local:policyIndex == 1
        {local @advisorEcon}    With low sales tax, you'll gain $2 with every purchase on top of city revenue.
    $elseif local:policyIndex == 2
        {local @advisorEcon}    With high sales tax, you'll gain $4 with every purchase on top of city revenue.
    $elseif local:policyIndex == 3
        {local @advisorEcon}    With a sales subsidy, your funds will pay $2 for every purchase, with only city revenue.
    $endif
$elseif local:policyType == "ImportTaxPolicy"
    $if     local:policyIndex == 0
        {local @advisorEcon}    Temporary text: Import subsidy policy NONE
    $elseif local:policyIndex == 1
        {local @advisorEcon}    Temporary text: Import subsidy policy  LOW
    $elseif local:policyIndex == 2
        {local @advisorEcon}    Temporary text: Import subsidy policy  HIGH
    $elseif local:policyIndex == 3
        {local @advisorEcon}    Temporary text: Import tax policy  TAX
    $endif
$endif

:: openedToForest
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(1), RegionUnlocked(2)
@forcePolicy    Economy
@once
{@advisorEconHill}      Ah, you've expanded into Cypress County. Lucky you.
{@advisorEconHill}      Now you can be <i>condescended to</i> while surrounded by natural splendor.
{@advisorEconHill}      Hope you like the smell of old mushrooms.

:: openedToPrairie
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(1), RegionUnlocked(3)
@forcePolicy    Ecology
@once
{@advisorEcolHill}      Ugh... Those Heath County hayseeds always irked me.
{@advisorEcolHill}      They think they're better than everyone because of their fancy college.
{@advisorEcolHill}      Plus their straw hats are weird!
{@advisorEcolHill}      Anyway, what can I help you with?


// :: preBloomRunoff
// @trigger        AlertExamined
// @conditions     alertType == "excess-runoff", CameraInRegion(1)
// @once
// {local @advisorEcol}    Hold on... This farm is just letting manure sit around!
// {local @advisorEcon}    An astute observation. What would you have them do with it?
// {local @advisorEcol}    Well, it's got phosphorus. Why not make use of it?
// {local @advisorEcon}    Who would pay to ship around truckloads of poop when there's Phos 4 Us?
// {local @advisorEcol}    Hmm...


:: runoffTrigger
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 1
@forcePolicy    Ecology
@queued
@once
$call Pause()
$set global:runoffDiscovered = true
{local @advisorEcol}    This farm is just letting manure leach into the water table!
{local @advisorEcol}    That must be behind those algae blooms.
{local @advisorEcon}    Maybe so, but they simply have no more favorable alternatives.
{local @advisorEcol}    Well, let's make it less favorable. How about a penalty fine for runoff?
{local @cafoFarmer}     A fine!? I'm barely scraping by as is. You'd have me selling at a loss!
{local @advisorEcon}    Well, a fine <i>could</i> incentivize selling manure...
{local @advisorEcon}    But Bertram is correct. Selling at a loss could disrupt the supply chain.
{local @advisorEcol}    What do you think, boss?
$call UnlockCards(RunoffPolicy)

:: genericRunoff
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 1, global:runoffDiscovered
@queued
$call Pause()
{local @advisorEcol}    More runoff... 
{local @advisorEcol}    Maybe we ought to increase our runoff penalty?
{local @advisorEcon}    Careful now! We don't want to bankrupt our farmers.
{local @advisorEcon}    We just need to give them a more favorable option.
$if Visited("region2.unlockStorage")
    {local @advisorEcon}    Or build a <b>Storage</b> unit instead.
$endif

:: discoverFirstBloom
@trigger        AlertExamined
@cutscene
@conditions     alertType == "bloom", alertRegion == 1
@once
$call Pause()
$set global:bloomDiscovered = true
// TODO: trigger ACT 2 HERE.
{@advisorEcolHill}    What's this...?
$call CutsceneBegin()
$call CutscenePrepareImages("intro/frame1-3.png", "intro/frame1-3.png", "intro/frame1-3.png")
    $call CutsceneNextImage()
    Something is wrong with the lakes... They are swamped with revolting green mire!
    {wait 1}
    $call CutsceneClearText()
    $call CutsceneNextImage()
    Manure from CAFOs must be running off into the lake with rainwater.
    {wait 1}
    $call CutsceneClearText()
    $call CutsceneNextImage()
    The cities need the farms for their milk, and farmers are struggling as is...
    {wait 1}
    $call CutsceneClearText()
    $call CutsceneClearImages()
$call CutsceneEnd()
{@advisorEcolHill}    Something must be done! I'll keep an eye out for runoff.
$call UnpauseAlertType("ExcessRunoff")
$call AddAutoAlertCondition("ExcessRunoff", 1)
$call Unpause()

:: genericBloomTrigger
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 1, global:bloomDiscovered
@forcePolicy    Ecology
{local @advisorEcol}    Yikes... Another algae bloom. What should we do about it?
{local @advisorEcol}    We could address the causes by penalizing runoff.
$if PolicyIsUnlocked(SkimmingPolicy)
    {local @advisorEcol}    Or use skimmers to clean up.
$endif

// TODO: add event/trigger for city stress (nearby bloom and/or lacking milk)

:: SellAtLossGrain
@trigger        AlertExamined
@conditions     alertType == "selling-loss", alertRegion == 1, isFromGrainFarm == true
@forcePolicy    Economy
@queued
$call Pause()
{local @grainFarmer}    My best option still loses me money... How am I gonna feed my family?
{local @advisorEcon}    Hmm... This supplier is selling at a loss.
{local @advisorEcon}    If we want to keep business running smoothly, we'd best find a way to decrease costs.
{local @advisorEcon}    Perhaps you can build a shorter road, or decrease taxes and penalties.
$call Unpause()

:: SellAtLossCafo
@trigger        AlertExamined
@conditions     alertType == "selling-loss", alertRegion == 1, isFromGrainFarm == false
@forcePolicy    Economy
@queued
$call Pause()
{local @cafoFarmer}     My farm is losing money... At this rate, I'll have to slow down operations!
{local @advisorEcon}    Hmm... This supplier is selling at a loss.
{local @advisorEcon}    If we want to keep business running smoothly, we'd best find a way to decrease costs.
{local @advisorEcon}    Perhaps you can build a shorter road, or decrease taxes and penalties.
$call Unpause()
