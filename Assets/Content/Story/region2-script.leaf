# basePath   region2

:: queueForestUnlock
@trigger        RegionUnlocked
@conditions     regionId == "Forest"
@queued
$yield // wait 1 frame for region to unlock
$call SendGlobalAlertForNode("region2_city1", region2.forestUnlocked)
{wait 5}  // TODO: don't open dialogue box when the line is just {wait}
$if intro:openedForestAlert == false
    $call FocusHighlightOn("GlobalAlert")
    {@advisorEconHill}      It would appear something needs your attention!
    {@advisorEconHill}      We can't continue until it is addressed. 
    {@advisorEconHill}      Click on it to see what's up.
$endif

:: forestUnlocked
@cutscene
@queued
// $call Pause()
$set intro:openedForestAlert = true
$call FocusClear()
{@advisorEconForest}    Salutations, Director.
{@advisorEconForest}    News of SAGA has spread to Cypress County.
{@advisorEconForest}    Can you help us connect our farms and city to help us grow?
{@advisorEconForest}    Our budget and policies are separate from Knoll County.
{@advisorEconForest}    We have more Dairy Farms than our <i>dear</i> neighbors.
$call Unpause()


:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(2)
// @forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
$call ForcePolicyInstant("Ecology")
    {local @advisorEcol}    Sage at your service! Looking to set ecology policy?
$else
    {local @advisorEcol}    You can assign ecological policies here once we have some.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(2)
// @forcePolicy    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
$call ForcePolicyInstant("Economy")
    {local @advisorEcon}    Shall we assign some economic policies?
$else
    {local @advisorEcon}    Salutations. You can see me about economic policies in the future.
$endif


:: forestConnection
@trigger FarmConnection
@conditions CameraInRegion(2) 
@once
{@advisorEcolForest}    Enjoying Cypress County?
{@advisorEcolForest}    The finest forests in the state, if I do say so myself.
{@advisorEcolForest}    All thanks to our <i>stellar</i> ecosystem management.
{@advisorEcolForest}    Those <i>hill dwellers</i> over in Knoll County could learn a thing or two.
// $call OffsetAlgaeGrowthThreshold(-1) // speed up growth to get first bloom alert
$call AddAutoAlertCondition("ExcessRunoff", 2)


:: runoffBranch
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 2, global:runoffDiscovered, !isFromGrainFarm
// $call Pause()
$if Visited("region2.unlockStorage")
    $branch .runoffGeneric
$else
    $branch .unlockStorage
$endif
// $call Unpause()

:: unlockStorage
@conditions     global:runoffDiscovered
@once
$call Wait(0.5)
{@cafoForest}     Hmm... This sitting manure leaches into the water table faster than it's used.
{@cafoForest}     Maybe we can use some reinforced containers to keep it... well, <i>contained?</i>
{@advisorEconForest}    Why not build your own storage?
{@cafoForest}     Seriously!? There's no way I could afford that at every farm.
{@advisorEcolForest}    Natalie's got a point.
$call FocusHighlightOn("BuildModeButton")
{@advisorEcolForest}    I've added <b>Storage</b> to your Build Mode menu.
{@advisorEcolForest}    Once connected to a Dairy Farm, they'll hold onto manure for later use.
{@advisorEcolForest}    But it won't be cheap - try to share it between Dairy Farms.
$call FocusClear()
$call OffsetAlgaeGrowthThreshold(0)
$set global:storageUnlocked = true
$call UnlockShopItem("Storage")

:: storageCaution
@trigger BuildButtonPressed
@conditions     toolType == "Storage", global:storageUnlocked
@cutscene
@once
{local @advisorEcon}    Be careful placing that <b>Storage!</b>
{local @advisorEcon}    Its location will be <b>permanent.</b>

:: runoffGeneric // triggered by runoffBranch
{@advisorEcolForest}    Eugh, more of that contemptible runoff.
{@advisorEcolForest}    We have to find a way to use the manure for fertilizer. 
$if BuildingBuiltInRegion("Storage", 2)
    {@advisorEconForest}     Another <b>Storage</b> unit could help, but they aren't cheap.
$else
    {@advisorEconForest}     A <b>Storage</b> unit might help, but they aren't cheap.
$endif
$set local:runoffLevel = PolicyLevelInRegion(2, "RunoffPolicy")
$if local:runoffLevel < 1
    {viewpoliciesnext}
    {@advisorEcolForest}    Then maybe we ought to institute a runoff penalty.
    $call ForcePolicyInstant("Ecology")
$elseif local:runoffLevel < 3
    {viewpoliciesnext}
    {@advisorEcolForest}    Then maybe we need to increase our runoff penalty.
    $call ForcePolicyInstant("Ecology")
$else
    {@advisorEcolForest}    Perhaps this farm needs a manure buyer.
$endif

// :: queueUnlockPhosphorusView
// @trigger        AlertExamined
// @conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered, AgeOfRegion(3) > 1
// @cutscene
// @once
// $call SendGlobalAlertForNode("region2_city1", region2.unlockPhosphorusView)

:: unlockPhosphorusView
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered, AgeOfRegion(3) > 1
@cutscene
@queued
@once
// $call Pause()
{@advisorEconForest}    Oh no...
$call CutsceneBegin()
    $call CutscenePrepareImages("act3/3-1-1.png", "act3/3-1-2.png", "act3/3-1-3.png")
    $call CutsceneAllImages(0.5)
    We thought the gross algae was only in Knoll County... How could blooms reach our forest?
    $call CutscenePrepareImages("act3/3-2-1.png", "act3/3-2-2.png", "act3/3-2-3.png")
	$call CutsceneAllImages(0.5)
	We need to figure out what is happening. Veldt University sent its best scholars to help investigate.
    $call CutscenePrepareImages("act3/3-3-1.png", "act3/3-3-2.png", "act3/3-3-3.png")
	$call CutsceneAllImages(0.5)
    Their new technology senses the flow of phosphorus... It flows through groundwater and downward into our lakes!
    $call CutscenePrepareImages("act3/3-4-1.png", "act3/3-4-2.png", "act3/3-4-3.png")
	$call CutsceneAllImages(0.5)
	This situation is dire... Could this tool help us locate sources of phosphorus and put a stop to them?
$call CutsceneEnd()
{@cityPrairie}      ...I call it PIP! Persistent Imaging of Phosphorus.
{@cityPrairie}      Let's try it out here in Cypress County.
$call UnlockAdvisorModule("Ecology")
$call PanToBuilding("region2_cafo2")
$call ForceAdvisorModule("Ecology")
{@advisorEconForest}   Good heavens!
{@advisorEcolForest}   There is phosphorus in the water even where we don't see the blooms! Our poor lakes...
$call AddRegionAgeDeltaTrigger(3, 20) // for unlocking MARKET GRAPHS.

$call OffsetAlgaeGrowthThreshold(1)

:: testBloomTriggerForest
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered
// @forcePolicy    Ecology
@evalPriority   -5
@once
// $call Pause()
{@advisorEcolForest}    Ugh... I can't believe there's an algae bloom <i>here!</i>
{@advisorEcolForest}    Those <i>hill-dwellers</i> should have done more to stop it.
{@advisorEcolHill}      Pft! That's rich coming from <i>Stellar Forest Management</i> over here.
{viewpoliciesnext}
{@advisorEcolForest}    It's not our fault you let your <i>filth</i> flow down here.
$call ForcePolicyInstant("Ecology")
// $call Unpause()

:: bloomGeneric
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered
@evalPriority   -3
// @forcePolicy    Ecology
{@advisorEcolForest}    More algae blooms... Gross!
{@advisorEcolForest}    It must be the phosphorus in our water.
$if global:storageUnlocked
    {@advisorEcolForest} Make sure to minimize runoff by sending manure away.
    {@advisorEcolForest} It can be used at a Grain Farm or kept in Storage.
$endif
$if PolicyIsUnlocked(SkimmingPolicy), PolicyLevelInRegion(2, "SkimmingPolicy") < 3
    {@advisorEcolForest} Skimmers can clean up algae...
    {@advisorEcolForest} But we need dredgers to remove the phosphorus.
    {@advisorEcolForest} Either way, they won't come cheap.
$endif
{viewpoliciesnext}
{@advisorEcolForest}    But you're the boss.
$call ForcePolicyInstant("Ecology")

:: unlockSkimmers
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, AgeOfRegion(4) > 0, global:readyForSkimmers
// @forcePolicy    Ecology
@cutscene
@once
{local @advisorEcol}    More algae blooms...
$if global:skimmersUnlocked == false // band-aid solution for queued "once" alert nodes
    $set global:skimmersUnlocked = true
    {@advisorEcolWetland}   Well, we have all these trawlers... What if we used them to skim algae off the lakes?
    {@advisorEconWetland}   Well, it could be costly... And it won't remove the underlying phosphorus.
    {@advisorEconWetland}   For that, we'd need expensive dredgers.
    {@advisorEcolWetland}   But skimmers could help mitigate the worst effects for now. 
    {viewpoliciesnext}
    {local @advisorEcol}    It's up to you, Director.
    $call UnlockCards(SkimmingPolicy)
    $call AddAutoAlertCondition("Bloom", 4)
$else
    {viewpoliciesnext}
    {local @advisorEcon}    Maybe those newfangled skimmers can help?
$endif
$call ForcePolicyInstant("Ecology")