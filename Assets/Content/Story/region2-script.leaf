# basePath   region2

:: queueForestUnlock
@trigger        RegionUnlocked
@conditions     regionId == "Forest"
@queued
$yield // wait 1 frame for region to unlock
$call SendGlobalAlertForNode("region2_city1", region2.forestUnlocked)
{wait 5}  // TODO: don't open dialogue box when the line is just {wait}
$if intro:openedForestAlert == false
    $call FocusHighlightOn("GlobalAlert")
    {@advisorEconHill}      It would appear something needs your attention!
    {@advisorEconHill}      We can't continue until it is addressed. 
    {@advisorEconHill}      Click on it to see what's up.
$endif

:: forestUnlocked
@cutscene
@queued
// $call Pause()
$set intro:openedForestAlert = true
$call FocusClear()
{@advisorEconForest}    Salutations, Director.
{@advisorEconForest}    News of SAGA has spread to Cypress County.
{@advisorEconForest}    Can you help us connect our farms and city to help us grow?
{@advisorEconForest}    Our budget and policies are separate from Knoll County.
{@advisorEconForest}    We have more Dairy Farms than our <i>dear</i> neighbors.
$call Unpause()


:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(2)
// @forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
$call ForcePolicyInstant("Ecology")
    {local @advisorEcol}    Sage at your service! Looking to set ecology policy?
$else
    {local @advisorEcol}    You can assign ecological policies here once we have some.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(2)
// @forcePolicy    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
$call ForcePolicyInstant("Economy")
    {local @advisorEcon}    Shall we assign some economic policies?
$else
    {local @advisorEcon}    Salutations. You can see me about economic policies in the future.
$endif


:: forestConnection
@trigger FarmConnection
@conditions CameraInRegion(2) 
@once
{@advisorEcolForest}    Enjoying Cypress County?
{@advisorEcolForest}    The finest forests in the state, if I do say so myself.
{@advisorEcolForest}    All thanks to our <i>stellar</i> ecosystem management.
{@advisorEcolForest}    Those <i>hill dwellers</i> over in Knoll County could learn a thing or two.
$call AddAutoAlertCondition("ExcessRunoff", 2)


:: runoffBranch
@trigger        AlertExamined
@conditions     alertType == "excess-runoff", alertRegion == 2, global:runoffDiscovered
// $call Pause()
$if Visited("region2.unlockStorage")
    $branch .runoffGeneric
$else
    $branch .unlockStorage
$endif
// $call Unpause()

:: unlockStorage
@conditions     global:runoffDiscovered
@once
{local @cafoFarmer}     Hmm... This sitting manure leaches into the water table faster than it's used.
{local @cafoFarmer}     Maybe we can use some reinforced containers to keep it... well, <i>contained?</i>
{@advisorEcolForest}    Not a half bad idea.
$call FocusHighlightOn("BuildModeButton")
{@advisorEcolForest}    I've added <b>Storage</b> to your Build Mode menu.
$call FocusClear()
{@advisorEcolForest}    Once connected to a Dairy Farm, they'll hold onto manure for later use.
{@advisorEcolForest}    But it won't be cheap - try to share it between Dairy Farms.

$call OffsetAlgaeGrowthThreshold(1)
$set global:storageUnlocked = true
$call UnlockShopItem("Storage")

:: storageCaution
@trigger BuildButtonPressed
@conditions     toolType == "Storage", global:storageUnlocked
@cutscene
@once
{local @advisorEcon}    Be careful placing that <b>Storage!</b>
{local @advisorEcon}    Its location will be <b>permanent.</b>

:: runoffGeneric // triggered by runoffBranch
{@advisorEcolForest}    Eugh, more of that contemptible runoff.
{@advisorEcolForest}    We have to find a way to use the manure for fertilizer. 
{@advisorEconForest}     <b>Storage</b> units help, but they aren't cheap.
{viewpoliciesnext}
{@advisorEcolForest}    A policy adjustment, then?
$call ForcePolicyInstant("Ecology")


// triggered by opening runoff in region 2 after region 3 has been opened
// feedback: use a farmer instead
:: unlockImportTax
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered, AgeOfRegion(3) > 1
@cutscene      
@once
$set global:importUnlocked = true
{@advisorEcolPrairie}   Hiiii, d'you mind if I intrude? Great, so:
// $call Pause()
{@advisorEcolPrairie}   I think I figured it out. Cypress County might just have too many Dairy Farms.
{@advisorEcolPrairie}   But we've got plenty of <b>grain</b> over in Heath County! Maybe we could help each other?
{@advisorEconPrairie}   Good point! Inter-region trade could be critical to addressing this problem...
{@advisorEconPrairie}   Perhaps we need to offset shipping costs.
{@advisorEconPrairie}   I've unlocked a policy for setting <b>Import Subsidies.</b>
$call UnlockCards(ImportTaxPolicy)
{@advisorEconPrairie}   Import <b>Subsidies</b> will encourage buying from other regions - but it'll come from your budget.
{@advisorEconForest}    Hmph. Well I say everyone should just buy local. 
$call ForcePolicyInstant("Economy")
{viewpoliciesnext}
{@advisorEconForest}    But it's up to you, Director.
// $call Unpause()

:: testBloomTriggerForest
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered
@forcePolicy    Ecology
@priority       Low
@once
// $call Pause()
{@advisorEcolForest}    Ugh... I can't believe there's an algae bloom <i>here!</i>
{@advisorEcolForest}    Those <i>hill-dwellers</i> should have done more to stop it.
{@advisorEcolHill}      Pft! That's rich coming from <i>Stellar Forest Management</i> over here.
{viewpoliciesnext}
{@advisorEcolForest}    It's not our fault you let your <i>filth</i> flow down here.
// $call Unpause()

:: bloomGeneric
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, global:bloomDiscovered
@priority       Low
@forcePolicy    Ecology
{@advisorEcolForest}    More algae blooms... Gross!
$if global:storageUnlocked
    {@advisorEcolForest}    We have to get the manure off the ground. It can be used as fertilizer or at put in <b>Storage</b> units.
$endif
$if PolicyIsUnlocked(SkimmingPolicy)
    {@advisorEcolForest}    Or use skimmers to clean up.
$endif
{viewpoliciesnext}
{@advisorEcolForest}    But you're the boss.

:: unlockSkimmers
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 2, AgeOfRegion(4) > 0, global:readyForSkimmers
@forcePolicy    Ecology
@cutscene
@once
{local @advisorEcol}    More algae blooms...
$if global:skimmersUnlocked == false // band-aid solution for queued "once" alert nodes
    $set global:skimmersUnlocked = true
    {@advisorEcolWetland}   Well, we have all these trawlers... What if we used them to skim algae off the lakes?
    {@advisorEconWetland}   Well, it could be costly... And it won't remove the underlying phosphorus.
    {@advisorEconWetland}   For that, we'd need expensive dredgers.
    {@advisorEcolWetland}   But skimmers could help mitigate the worst effects for now. 
    {viewpoliciesnext}
    {local @advisorEcol}    It's up to you, Director.
    $call UnlockCards(SkimmingPolicy)
    $call AddAutoAlertCondition("Bloom", 4)
$else
    {viewpoliciesnext}
    {local @advisorEcon}    Maybe those newfangled skimmers can help?
$endif