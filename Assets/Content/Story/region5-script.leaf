# basePath   region5

:: queueCityUnlocked
@trigger        RegionUnlocked
@conditions     regionId == "Urban"
$yield // wait 1 frame for region to unlock
$call SendGlobalAlertForNode("region5_city1", region5.regionUnlocked, true)

:: regionUnlocked
@queued
@cutscene
// $call Pause()
{@advisorEconUrban}    'Sup. Welcome to Smokestack City.
$call QueueDialogueBubble(region2_city1, region2.openedToCity)
$call PanToBuilding("region5_city1")
$call CutsceneBegin(5)
    $call CutscenePrepareImages("act5/5-1-1.png", "act5/5-1-2.png", "act5/5-1-3.png")
    $call CutsceneAllImages(0.5)
    Smokestack City has heard of the approaching blooms, and SAGA's efforts to stop them.
    $call CutscenePrepareImages("act5/5-2-1.png", "act5/5-2-2.png", "act5/5-2-3.png")
	$call CutsceneAllImages(0.5)
    PHOS4US imports continue adding phosphorus to our ecosystem. They must be cut off!
	$call CutscenePrepareImages("act5/5-3-1.png", "act5/5-3-2.png", "act5/5-3-3.png")
	$call CutsceneAllImages(0.5)
    These Manure Processors have enabled a new option: long-distance shipping! Could we use it to outcompete PHOS4US? 
	$call CutscenePrepareImages("act5/5-4-1.png", "act5/5-4-2.png", "act5/5-4-3.png")
	$call CutsceneAllImages(0.5)
    It's a race to the end... We must stem the flow of phosphorus before algae overtakes our cities!
    $call CutscenePrepareImages("act5/5-4-1.png", "act5/5-4-2.png", "act5/5-4-3.png")
	$call CutsceneAllImages(0.5)
    The stakes are high... Can we prevent disaster?
$call CutsceneEnd()
{@advisorEconUrban}     That Manure Processor is radical...
{@advisorEconUrban}     But <b>long-distance shipping</b> would be even <i>radder!</i>
{@advisorEconUrban}     I've contacted Blimp Bros Shipping to open an Export Depot...
$call UnlockExportDepot("region2_export1")
$call Wait(3)
{@advisorEconUrban}     We can send Processed Fertilizer there to be shipped anywhere!
{@advisorEcolUrban}     Good thinking, Xavier.
{@advisorEconUrban}     Yeah, I'm kind of a <i>logistical wizard.</i>

// $call OffsetAlgaeGrowthThreshold(2)
// $call Unpause()

// :: unlockExportDepot
// {@grainUrban}       But even the Processed Fertilizer is so far away...
// {@grainUrban}       What if we could ship it like PHOS4US?
//$call UnlockExportDepot("region2_export1")

:: triggerUranium
@trigger        ExternalImport
@conditions     alertRegion == 5
@once
$call QueueDialogueBubble(region5_grain2, region5.phosUranium)

:: phosUranium
@queued
@once
$call ForcePinDialogue()
{@phos4us}      Thank you for purchasing PHOS4US!
{@grainUrban}   Sure thing.
{@phos4us}      You can rest easy knowing our Advanced Formula is 100% Uranium Free!
{@grainUrban}   What? Does it normally have uranium?
{@phos4us}      No. It's been certified Uranium Free!
{@grainUrban}   Should I be worried about uranium in my fertilizer!?
{@phos4us}      Not with PHOS4US! It's Uranium Free!


:: triggerFirstBlimp
@trigger InternalBlimpSent
@once
$call QueueDialogueBubble(region1_city1, region1.pippinEcology)
$call QueueDialogueBubble(region3_city1, region3.blimpConcerns)
$call SendGlobalAlertForNode("region5_city1", region5.firstBlimpReceived, true)

:: firstBlimpReceived
@once
@queued
{@advisorEconUrban}   Woah, righteous!
$call PanToBuilding("region2_export1")
{@advisorEconUrban}   Our <b>Export Depot</b> has sent out Processed Manure...
{@advisorEconUrban}   This could be what we need to kick out PHOS4US!
$call ForceAdvisorModule("Economy") // toggle on
{@advisorEcolUrban}   If we get rid of PHOS4US, the ecosystem will stabilize!
{@advisorEcolUrban}   That's how we can <b>win!</b>
{@advisorEconUrban}   Right on. Keep an eye on that <b>Fertilizer Market Share</b>!
$call ForceAdvisorModule("Economy") // toggle off

:: introduceUrban
@queued
@once
$call ForcePinDialogue()
{@advisorEcolUrban}     Thank goodness SAGA is here.
{@advisorEconUrban}     Yeah, we're mondo stoked.
{@advisorEcolUrban}     Most of the farming is upriver, out in the country!
{@advisorEcolUrban}     But their awful pollutants flow down to us...
{@advisorEcolUrban}     And we're <i>forced</i> to deal with them!
{@advisorEconUrban}     Major bummer, dude...
{@grainUrban}           Hm. Maybe you city folk need some perspective.
{@grainUrban}           Why not visit some farms and see?
$call QueueDialogueBubble(region3_grain1, region3.urbanVisit)
{@advisorEconUrban}     Sounds bodacious!

:: finishUrban
@queued
@once
$call ForcePinDialogue()
{@advisorEconUrban}     It all makes sense now...
{@advisorEcolUrban}     Hmm?
{@advisorEconUrban}     We may not be producing much runoff here...
{@advisorEconUrban}     But our cities need a lot of milk!
{@advisorEconUrban}     And that demand indirectly led to runoff.
{@advisorEconUrban}     We're one part of the system, so we need to do our part!
{@advisorEcolUrban}     Very well put, Xavier.
{@advisorEconUrban}     Thanks, homeslice.

:: urgentMilkRequestUrban
@trigger        UrgentRequest
@conditions     resource == "Milk", alertRegion == 5
@once
$call QueueDialogueBubble(region5_city2, region5.needMilk)

:: needMilk
@queued
@once
{@cityUrban}            What the heck? Where's our darn dairy!
{@advisorEconUrban}     Not groovy...
{@advisorEconUrban}     Make sure there are plenty of routes to Dairy Farms, dude!
$if PolicyLevelInRegion(5, "ImportTaxPolicy") == 1
    {@advisorEconUrban}     That Milk Subsidy should help!
$else
    {viewpoliciesnext}
    {@advisorEconUrban}     And a Milk Subsidy wouldn't be too shabby either...
    $call ForcePolicyInstant("Ecology")
$endif

:: bloomGeneric
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 5, global:bloomDiscovered
@forcePolicy    Ecology
{@advisorEcolUrban}     Algae blooms... This doesn't bode well.
{viewpoliciesnext}
{@advisorEcolUrban}     We'd best handle these before they reach the city!

:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(5)
// @forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
    $call ForcePolicyInstant("Ecology")
    {local @advisorEcol}    Good to see you, Director! Here for ecological policies?
$else
{local @advisorEcol}    Hey there! No policies to assign yet.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(5)
// @forcePolicy    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
    $call ForcePolicyInstant("Economy")
    {local @advisorEcon}    'Sup boss! We makin' big moves economy-style?
$else
    {local @advisorEcon}    Aww man, we're plumb outta economic policies.
$endif