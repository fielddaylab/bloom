# basePath   region3
:: queuePrairieUnlock
@trigger        RegionUnlocked
@conditions     regionId == "Prairie"
$yield // wait 1 frame for region to unlock
$call SendGlobalAlertForNode("region3_city1", region3.regionUnlocked)

:: regionUnlocked
@queued
@cutscene
// $call Pause()
{@advisorEconPrairie}    Howdy there! 
$call PanToBuilding("region3_city1")
{@advisorEconPrairie}    Heath County could use SAGA's help. 
{@advisorEconPrairie}    We've got a whole <i>bushel</i> of Grain Farms... and of course Veldt University!
{@advisorEconPrairie}    They'll be conducting research about this algae unpleasantness.
$call QueueDialogueBubble(region2_city1, region2.explainAlgaeBloom)
$call OffsetAlgaeGrowthThreshold(0)
$call AddAutoAlertCondition("Bloom", 2) // for unlocking PIPS
$call AddRegionAgeTrigger(3, 20) // for unlocking IMPORT TAX
$if global:storageUnlocked = false
    $call SendGlobalAlertForNode("region2_cafo1", region2.unlockStorage)
$endif
// $call Unpause()

:: ecologyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Ecology", CameraInRegion(3)
// @forcePolicy    Ecology
$if PolicyIsUnlocked(RunoffPolicy)
    $call ForcePolicyInstant("Ecology")
    {local @advisorEcol}    Hiya! Want to assign some environmental policies?
$else
    {local @advisorEcol}    Sorry boss, no policies to assign yet.
$endif

:: economyAdvisorOpen
@trigger        AdvisorOpened
@conditions     advisorType == "Economy", CameraInRegion(3)
// @forcePolicy    Economy
$if PolicyIsUnlocked(SalesTaxPolicy)
    $call ForcePolicyInstant("Economy")
    {local @advisorEcon}    Howdy! Here to set up some economic policy?
$else
    {local @advisorEcon}    Once we have some economic policies you can see me here.
$endif

:: bloomGeneric 
@trigger        AlertExamined
@conditions     alertType == "bloom", alertRegion == 3, global:bloomDiscovered
// @forcePolicy    Ecology
{@advisorEcolPrairie}    Eep! An algae bloom!
{@advisorEcolPrairie}    I say we just shut those large Dairy Farms down.
{@advisorEconPrairie}    Come now, Sandra, our cities need milk!
{@advisorEconPrairie}    I don't reckon they'll be going vegan anytime soon.
$if PolicyIsUnlocked(SkimmingPolicy), PolicyLevelInRegion(3, "SkimmingPolicy") < 3
    {@advisorEcolPrairie} Well, we could at least increase our skimming policy.
    {@advisorEcolPrairie} That'll get rid of some Algae.
    {@advisorEcolPrairie} And if we Dredge, that'll remove some phosphorus too!
$endif
{viewpoliciesnext}
{@advisorEcolPrairie}    What do you think?
$call ForcePolicyInstant("Ecology")

// $call Unpause()

:: economicSolution
@trigger AlertExamined
@conditions alertType == "dialogue", buildingType == "City", alertRegion == 3, global:pipsUnlocked
@once
{@advisorEconPrairie}    I've been crunching some numbers...
{@advisorEconPrairie}    And it seems there's an economic solution to our problem!
{@advisorEconPrairie}    I've written up a plan...
{@cityPrairie}           Jamie... This plan says milk would cost $15 a gallon.
{@advisorEconPrairie}    Precisely!
{@advisorEconPrairie}    That should account for all the externalities...
{@cityPrairie}           If milk is $15 a gallon, I will riot in the streets.
{@advisorEconPrairie}    Ah. Hm.
{@advisorEconPrairie}    Back to the drawing board then!

// TODO: queue this dialogue
:: veganSolution
@trigger AlertExamined
@conditions alertType == "dialogue", buildingType == "City", alertRegion == 3, global:pipsUnlocked
@once
{@advisorEcolPrairie}   I think I've got a solution to this algae business!
{@advisorEconPrairie}   Oh? Pray tell!
{@advisorEcolPrairie}   It's easy: we just shut down the dairy farms!
{@cafoPrairie}          Excuse me?
{@advisorEcolPrairie}   We won't need milk anymore if everyone goes vegan!
{@cityPrairie}          <i>Excuse me!?</i>
{@advisorEconPrairie}   Well, I reckon you're <i>technically</i> correct...
{@advisorEconPrairie}   But SAGA can't exactly write a policy for that.

:: queueUnlockImportTax
@trigger        RegionReachedAge // RegionAge 20 after region opens
@conditions     regionId == 3
@once
$call SendGlobalAlertForNode("region3_grain2", region3.unlockImportTax)

:: unlockImportTax
@cutscene 
@queued     
@once
$set global:importUnlocked = true
{@grainPrairie}         Howdy Director! I've been noticing...
// $call Pause()
{@grainPrairie}         We're growing more grain here than we can sell.
{@grainPrairie}         Couldn't y'all cowherders in Cypress make use of this?
{@cafoForest}           Erm... Maybe, but shipping it in from the boondocks costs a fortune.
{@advisorEconPrairie}   Perhaps SAGA could help cover those costs?
{@advisorEconPrairie}   I've added a policy for setting <b>Import Subsidies.</b>
$call UnlockCards(ImportTaxPolicy)
{@advisorEconPrairie}   <b>Subsidizing</b> a resource will encourage buying it from other counties.
{@advisorEconPrairie}   That could help us balance one county's <b>excess</b> with another's <b>needs.</b>
{@grainPrairie}         Hold up... does that mean you could <b>Subsidize fertilizer</b> 
{@advisorEconPrairie}   Yes ma'am! But it'll have to come from our budget.
$call ForcePolicyInstant("Economy")
{viewpoliciesnext}
{@advisorEconPrairie}   What do you think, Director?
// $call Unpause()

:: queueSuggestFert
@trigger    ExternalImport
@conditions 

:: suggestFertSubsidy


:: queueUnlockMarketView
@trigger        RegionReachedAge // RegionAgeDelta 20 after PIPS unlocked
@conditions     regionId == 3, global:importUnlocked, global:pipsUnlocked
@cutscene
@once
$call SendGlobalAlertForNode("region3_city1", region3.unlockTradeGraphs)

:: unlockTradeGraphs
@cutscene // RegionAgeDelta 20 after PIPS unlocked
@queued
@once
$set global:tradeGraphsUnlocked = true
{@advisorEconPrairie}   Howdy! Hope I'm not interrupting anything important.
{@advisorEconPrairie}   I was inspired by Winston's PIP system...
{@advisorEconPrairie}   So I whipped up something of an economic equivalent!
$call UnlockAdvisorModule("Economy")
{@advisorEconPrairie}   It includes a <b>Phosphorus Market Share</b> graph.
{@advisorEconPrairie}   It shows which types of phosphorus fertilizer are being used.
$call ForceAdvisorModule("Economy")
{@advisorEconPrairie}   We'll want to replace red PHOS4US to keep those extra nutrients out!
{@advisorEconPrairie}   You can click <b>Economy View</b> to check it any time.
// $call Unpause()
